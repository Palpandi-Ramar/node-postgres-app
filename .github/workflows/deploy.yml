name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      APPLICATION_NAME: ${{ secrets.EB_APP_NAME }}
      ENVIRONMENT_NAME: ${{ secrets.EB_ENV_NAME }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      VERSION_LABEL: v-${{ github.run_number }}
      ZIP_FILE: app-v-${{ github.run_number }}.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Zip deployment package
        run: |
          zip -r "$ZIP_FILE" . -x "*.git*" "node_modules/*" "tests/*"

      - name: Upload to S3
        run: |
          aws s3 cp "$ZIP_FILE" "s3://$S3_BUCKET_NAME/$ZIP_FILE"

      - name: Create new EB Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "$APPLICATION_NAME" \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket=$S3_BUCKET_NAME,S3Key=$ZIP_FILE

      - name: Wait until application version is PROCESSED
        run: |
          for i in {1..30}; do
            STATUS=$(aws elasticbeanstalk describe-application-versions \
              --application-name "$APPLICATION_NAME" \
              --version-labels "$VERSION_LABEL" \
              --query 'ApplicationVersions[0].Status' \
              --output text 2>/dev/null)

            echo "Status: $STATUS"

            if [ "$STATUS" = "PROCESSED" ]; then
              echo "Version is ready for deployment."
              break
            fi

            if [ "$i" -eq 30 ]; then
              echo "Timed out waiting for version to be processed."
              exit 1
            fi

            sleep 10
          done

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "$ENVIRONMENT_NAME" \
            --version-label "$VERSION_LABEL"
